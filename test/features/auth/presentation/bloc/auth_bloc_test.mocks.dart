// Mocks generated by Mockito 5.4.4 from annotations
// in disaster_safety/test/features/auth/presentation/bloc/auth_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:cloud_firestore/cloud_firestore.dart' as _i6;
import 'package:dartz/dartz.dart' as _i4;
import 'package:disaster_safety/core/error/failure.dart' as _i10;
import 'package:disaster_safety/features/auth/data/datasource/auth_datasource.dart'
    as _i2;
import 'package:disaster_safety/features/auth/data/datasource/db_datasource.dart'
    as _i3;
import 'package:disaster_safety/features/auth/data/model/user_model.dart'
    as _i7;
import 'package:disaster_safety/features/auth/data/repository/auth_repository_impl.dart'
    as _i8;
import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthDatasourceImpl_0 extends _i1.SmartFake
    implements _i2.AuthDatasourceImpl {
  _FakeAuthDatasourceImpl_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDbDatasourceImpl_1 extends _i1.SmartFake
    implements _i3.DbDatasourceImpl {
  _FakeDbDatasourceImpl_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_2<L, R> extends _i1.SmartFake implements _i4.Either<L, R> {
  _FakeEither_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseAuth_3 extends _i1.SmartFake implements _i5.FirebaseAuth {
  _FakeFirebaseAuth_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_4 extends _i1.SmartFake implements _i5.User {
  _FakeUser_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_5 extends _i1.SmartFake
    implements _i5.UserCredential {
  _FakeUserCredential_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionReference_6<T extends Object?> extends _i1.SmartFake
    implements _i6.CollectionReference<T> {
  _FakeCollectionReference_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_7 extends _i1.SmartFake implements _i7.UserModel {
  _FakeUserModel_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepositoryImpl extends _i1.Mock
    implements _i8.AuthRepositoryImpl {
  MockAuthRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthDatasourceImpl get authDatasource => (super.noSuchMethod(
        Invocation.getter(#authDatasource),
        returnValue: _FakeAuthDatasourceImpl_0(
          this,
          Invocation.getter(#authDatasource),
        ),
      ) as _i2.AuthDatasourceImpl);

  @override
  _i3.DbDatasourceImpl get dbDatasource => (super.noSuchMethod(
        Invocation.getter(#dbDatasource),
        returnValue: _FakeDbDatasourceImpl_1(
          this,
          Invocation.getter(#dbDatasource),
        ),
      ) as _i3.DbDatasourceImpl);

  @override
  _i9.Future<_i4.Either<_i10.Failure, void>> delteAccount(
    String? uid,
    String? email,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #delteAccount,
          [
            uid,
            email,
          ],
        ),
        returnValue: _i9.Future<_i4.Either<_i10.Failure, void>>.value(
            _FakeEither_2<_i10.Failure, void>(
          this,
          Invocation.method(
            #delteAccount,
            [
              uid,
              email,
            ],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i10.Failure, void>>);

  @override
  _i9.Future<_i4.Either<_i10.Failure, _i7.UserModel>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i9.Future<_i4.Either<_i10.Failure, _i7.UserModel>>.value(
            _FakeEither_2<_i10.Failure, _i7.UserModel>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i10.Failure, _i7.UserModel>>);

  @override
  _i9.Future<_i4.Either<_i10.Failure, void>> signUp(
    _i7.UserModel? user,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            user,
            password,
          ],
        ),
        returnValue: _i9.Future<_i4.Either<_i10.Failure, void>>.value(
            _FakeEither_2<_i10.Failure, void>(
          this,
          Invocation.method(
            #signUp,
            [
              user,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i10.Failure, void>>);

  @override
  _i9.Future<_i4.Either<_i10.Failure, _i7.UserModel>> updateAccount(
          _i7.UserModel? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAccount,
          [user],
        ),
        returnValue: _i9.Future<_i4.Either<_i10.Failure, _i7.UserModel>>.value(
            _FakeEither_2<_i10.Failure, _i7.UserModel>(
          this,
          Invocation.method(
            #updateAccount,
            [user],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i10.Failure, _i7.UserModel>>);

  @override
  _i9.Future<_i4.Either<_i10.Failure, void>> confirmResetPassord(
    String? email,
    String? code,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmResetPassord,
          [
            email,
            code,
            password,
          ],
        ),
        returnValue: _i9.Future<_i4.Either<_i10.Failure, void>>.value(
            _FakeEither_2<_i10.Failure, void>(
          this,
          Invocation.method(
            #confirmResetPassord,
            [
              email,
              code,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i10.Failure, void>>);

  @override
  _i9.Future<_i4.Either<_i10.Failure, void>> sendresetPassordEmail(
          String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendresetPassordEmail,
          [email],
        ),
        returnValue: _i9.Future<_i4.Either<_i10.Failure, void>>.value(
            _FakeEither_2<_i10.Failure, void>(
          this,
          Invocation.method(
            #sendresetPassordEmail,
            [email],
          ),
        )),
      ) as _i9.Future<_i4.Either<_i10.Failure, void>>);
}

/// A class which mocks [AuthDatasourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthDatasourceImpl extends _i1.Mock
    implements _i2.AuthDatasourceImpl {
  MockAuthDatasourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FirebaseAuth get fauth => (super.noSuchMethod(
        Invocation.getter(#fauth),
        returnValue: _FakeFirebaseAuth_3(
          this,
          Invocation.getter(#fauth),
        ),
      ) as _i5.FirebaseAuth);

  @override
  _i9.Future<void> deleteUser(String? username) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [username],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i5.User> googleLogin() => (super.noSuchMethod(
        Invocation.method(
          #googleLogin,
          [],
        ),
        returnValue: _i9.Future<_i5.User>.value(_FakeUser_4(
          this,
          Invocation.method(
            #googleLogin,
            [],
          ),
        )),
      ) as _i9.Future<_i5.User>);

  @override
  _i9.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> sendResetCode(String? email) => (super.noSuchMethod(
        Invocation.method(
          #sendResetCode,
          [email],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> confirmPasswordResetCode(
    String? email,
    String? code,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordResetCode,
          [
            email,
            code,
            password,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i5.UserCredential> signUp(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            email,
            password,
          ],
        ),
        returnValue: _i9.Future<_i5.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signUp,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i5.UserCredential>);

  @override
  _i9.Future<_i5.User> usernameLogin(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #usernameLogin,
          [
            email,
            password,
          ],
        ),
        returnValue: _i9.Future<_i5.User>.value(_FakeUser_4(
          this,
          Invocation.method(
            #usernameLogin,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i5.User>);
}

/// A class which mocks [DbDatasourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockDbDatasourceImpl extends _i1.Mock implements _i3.DbDatasourceImpl {
  MockDbDatasourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.CollectionReference<Object?> get userRef => (super.noSuchMethod(
        Invocation.getter(#userRef),
        returnValue: _FakeCollectionReference_6<Object?>(
          this,
          Invocation.getter(#userRef),
        ),
      ) as _i6.CollectionReference<Object?>);

  @override
  _i9.Future<void> addUserData(
    _i7.UserModel? user,
    _i5.UserCredential? credential,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserData,
          [
            user,
            credential,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> removeData(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #removeData,
          [uid],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.UserModel> getUserData({required String? uid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
          {#uid: uid},
        ),
        returnValue: _i9.Future<_i7.UserModel>.value(_FakeUserModel_7(
          this,
          Invocation.method(
            #getUserData,
            [],
            {#uid: uid},
          ),
        )),
      ) as _i9.Future<_i7.UserModel>);

  @override
  _i9.Future<void> updateUserData(_i7.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUserData,
          [user],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}
